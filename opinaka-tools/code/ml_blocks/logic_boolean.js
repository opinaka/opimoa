Blockly.Blocks.logic = {};
Blockly.Constants.Logic = {};
Blockly.Constants.Logic.HUE = 210;
Blockly.defineBlocksWithJsonArray([
    {
        type: "logic_boolean",
        message0: "%1",
        args0: [
            {
                type: "field_dropdown",
                name: "BOOL",
                options: [
                    ["%{BKY_LOGIC_BOOLEAN_TRUE}", "TRUE"],
                    ["%{BKY_LOGIC_BOOLEAN_FALSE}", "FALSE"],
                ],
            },
        ],
        output: "Boolean",
        style: "logic_blocks",
        tooltip: "%{BKY_LOGIC_BOOLEAN_TOOLTIP}",
        helpUrl: "%{BKY_LOGIC_BOOLEAN_HELPURL}",
    },
    {
        type: "controls_if",
        message0: "%{BKY_CONTROLS_IF_MSG_IF} %1",
        args0: [{ type: "input_value", name: "IF0", check: "Boolean" }],
        message1: "%{BKY_CONTROLS_IF_MSG_THEN} %1",
        args1: [{ type: "input_statement", name: "DO0" }],
        previousStatement: null,
        nextStatement: null,
        style: "logic_blocks",
        helpUrl: "%{BKY_CONTROLS_IF_HELPURL}",
        mutator: "controls_if_mutator",
        extensions: ["controls_if_tooltip"],
    },
    {
        type: "controls_ifelse",
        message0: "%{BKY_CONTROLS_IF_MSG_IF} %1",
        args0: [{ type: "input_value", name: "IF0", check: "Boolean" }],
        message1: "%{BKY_CONTROLS_IF_MSG_THEN} %1",
        args1: [{ type: "input_statement", name: "DO0" }],
        message2: "%{BKY_CONTROLS_IF_MSG_ELSE} %1",
        args2: [{ type: "input_statement", name: "ELSE" }],
        previousStatement: null,
        nextStatement: null,
        style: "logic_blocks",
        tooltip: "%{BKYCONTROLS_IF_TOOLTIP_2}",
        helpUrl: "%{BKY_CONTROLS_IF_HELPURL}",
        extensions: ["controls_if_tooltip"],
    },
    {
        type: "logic_compare",
        message0: "%1 %2 %3",
        args0: [
            { type: "input_value", name: "A" },
            {
                type: "field_dropdown",
                name: "OP",
                options: [
                    ["=", "EQ"],
                    ["\u2260", "NEQ"],
                    ["\u200f<", "LT"],
                    ["\u200f\u2264", "LTE"],
                    ["\u200f>", "GT"],
                    ["\u200f\u2265", "GTE"],
                ],
            },
            { type: "input_value", name: "B" },
        ],
        inputsInline: !0,
        output: "Boolean",
        style: "logic_blocks",
        helpUrl: "%{BKY_LOGIC_COMPARE_HELPURL}",
        extensions: ["logic_compare", "logic_op_tooltip"],
    },
    {
        type: "logic_operation",
        message0: "%1 %2 %3",
        args0: [
            { type: "input_value", name: "A", check: "Boolean" },
            {
                type: "field_dropdown",
                name: "OP",
                options: [
                    ["%{BKY_LOGIC_OPERATION_AND}", "AND"],
                    ["%{BKY_LOGIC_OPERATION_OR}", "OR"],
                ],
            },
            { type: "input_value", name: "B", check: "Boolean" },
        ],
        inputsInline: !0,
        output: "Boolean",
        style: "logic_blocks",
        helpUrl: "%{BKY_LOGIC_OPERATION_HELPURL}",
        extensions: ["logic_op_tooltip"],
    },
    {
        type: "logic_negate",
        message0: "%{BKY_LOGIC_NEGATE_TITLE}",
        args0: [{ type: "input_value", name: "BOOL", check: "Boolean" }],
        output: "Boolean",
        style: "logic_blocks",
        tooltip: "%{BKY_LOGIC_NEGATE_TOOLTIP}",
        helpUrl: "%{BKY_LOGIC_NEGATE_HELPURL}",
    },
    { type: "logic_null", message0: "%{BKY_LOGIC_NULL}", output: null, style: "logic_blocks", tooltip: "%{BKY_LOGIC_NULL_TOOLTIP}", helpUrl: "%{BKY_LOGIC_NULL_HELPURL}" },
    {
        type: "logic_ternary",
        message0: "%{BKY_LOGIC_TERNARY_CONDITION} %1",
        args0: [{ type: "input_value", name: "IF", check: "Boolean" }],
        message1: "%{BKY_LOGIC_TERNARY_IF_TRUE} %1",
        args1: [{ type: "input_value", name: "THEN" }],
        message2: "%{BKY_LOGIC_TERNARY_IF_FALSE} %1",
        args2: [{ type: "input_value", name: "ELSE" }],
        output: null,
        style: "logic_blocks",
        tooltip: "%{BKY_LOGIC_TERNARY_TOOLTIP}",
        helpUrl: "%{BKY_LOGIC_TERNARY_HELPURL}",
        extensions: ["logic_ternary"],
    },
]);